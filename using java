import java.util.Scanner;
import java.util.ArrayList;
import java.util.List;

class BankAccount {
    private String accountNumber;
    private String accountHolder;
    private double balance;
    private String accountType;

    public BankAccount(String accountNumber, String accountHolder, double initialDeposit, String accountType) {
        this.accountNumber = accountNumber;
        this.accountHolder = accountHolder;
        this.balance = initialDeposit;
        this.accountType = accountType;
    }

    public String getAccountNumber() {
        return accountNumber;
    }

    public String getAccountHolder() {
        return accountHolder;
    }

    public double getBalance() {
        return balance;
    }

    public void deposit(double amount) {
        if (amount > 0) {
            balance += amount;
            System.out.println("Deposited: $" + amount);
        } else {
            System.out.println("Invalid deposit amount.");
        }
    }

    public boolean withdraw(double amount) {
        if (amount <= balance && amount > 0) {
            balance -= amount;
            System.out.println("Withdrawn: $" + amount);
            return true;
        } else {
            System.out.println("Insufficient balance or invalid amount.");
            return false;
        }
    }

    public boolean transfer(BankAccount toAccount, double amount) {
        if (withdraw(amount)) {
            toAccount.deposit(amount);
            System.out.println("Transferred: $" + amount + " to " + toAccount.getAccountHolder());
            return true;
        }
        return false;
    }

    public void displayAccountDetails() {
        System.out.println("Account Number: " + accountNumber);
        System.out.println("Account Holder: " + accountHolder);
        System.out.println("Account Type: " + accountType);
        System.out.println("Balance: $" + balance);
    }
}

class Bank {
    private List<BankAccount> accounts;

    public Bank() {
        accounts = new ArrayList<>();
    }

    public void addAccount(BankAccount account) {
        accounts.add(account);
    }

    public BankAccount getAccountByNumber(String accountNumber) {
        for (BankAccount account : accounts) {
            if (account.getAccountNumber().equals(accountNumber)) {
                return account;
            }
        }
        return null;
    }

    public boolean accountExists(String accountNumber) {
        return getAccountByNumber(accountNumber) != null;
    }

    public void listAllAccounts() {
        for (BankAccount account : accounts) {
            account.displayAccountDetails();
            System.out.println("-----------------------------------");
        }
    }
}

public class BankingSystem {

    private static final Scanner scanner = new Scanner(System.in);
    private static final Bank bank = new Bank();

    public static void main(String[] args) {
        System.out.println("Welcome to the Banking System!");
        while (true) {
            displayMenu();
            int choice = scanner.nextInt();
            scanner.nextLine(); // Clear buffer
            switch (choice) {
                case 1:
                    createAccount();
                    break;
                case 2:
                    depositMoney();
                    break;
                case 3:
                    withdrawMoney();
                    break;
                case 4:
                    transferMoney();
                    break;
                case 5:
                    viewAccountDetails();
                    break;
                case 6:
                    bank.listAllAccounts();
                    break;
                case 7:
                    System.out.println("Thank you for using our services!");
                    System.exit(0);
                    break;
                default:
                    System.out.println("Invalid choice! Please try again.");
            }
        }
    }

    private static void displayMenu() {
        System.out.println("\n-------- Main Menu --------");
        System.out.println("1. Create Account");
        System.out.println("2. Deposit Money");
        System.out.println("3. Withdraw Money");
        System.out.println("4. Transfer Money");
        System.out.println("5. View Account Details");
        System.out.println("6. View All Accounts");
        System.out.println("7. Exit");
        System.out.print("Enter your choice: ");
    }

    private static void createAccount() {
        System.out.print("Enter Account Number: ");
        String accountNumber = scanner.nextLine();
        if (bank.accountExists(accountNumber)) {
            System.out.println("Account already exists!");
            return;
        }
        System.out.print("Enter Account Holder Name: ");
        String accountHolder = scanner.nextLine();
        System.out.print("Enter Initial Deposit Amount: ");
        double initialDeposit = scanner.nextDouble();
        scanner.nextLine(); // Clear buffer
        System.out.print("Enter Account Type (Saving/Current): ");
        String accountType = scanner.nextLine();

        BankAccount account = new BankAccount(accountNumber, accountHolder, initialDeposit, accountType);
        bank.addAccount(account);
        System.out.println("Account created successfully!");
    }

    private static void depositMoney() {
        System.out.print("Enter Account Number: ");
        String accountNumber = scanner.nextLine();
        BankAccount account = bank.getAccountByNumber(accountNumber);
        if (account == null) {
            System.out.println("Account not found!");
            return;
        }
        System.out.print("Enter deposit amount: ");
        double amount = scanner.nextDouble();
        account.deposit(amount);
    }

    private static void withdrawMoney() {
        System.out.print("Enter Account Number: ");
        String accountNumber = scanner.nextLine();
        BankAccount account = bank.getAccountByNumber(accountNumber);
        if (account == null) {
            System.out.println("Account not found!");
            return;
        }
        System.out.print("Enter withdraw amount: ");
        double amount = scanner.nextDouble();
        account.withdraw(amount);
    }

    private static void transferMoney() {
        System.out.print("Enter your Account Number: ");
        String fromAccountNumber = scanner.nextLine();
        BankAccount fromAccount = bank.getAccountByNumber(fromAccountNumber);
        if (fromAccount == null) {
            System.out.println("Account not found!");
            return;
        }
        System.out.print("Enter recipient Account Number: ");
        String toAccountNumber = scanner.nextLine();
        BankAccount toAccount = bank.getAccountByNumber(toAccountNumber);
        if (toAccount == null) {
            System.out.println("Recipient account not found!");
            return;
        }
        System.out.print("Enter transfer amount: ");
        double amount = scanner.nextDouble();
        fromAccount.transfer(toAccount, amount);
    }

    private static void viewAccountDetails() {
        System.out.print("Enter Account Number: ");
        String accountNumber = scanner.nextLine();
        BankAccount account = bank.getAccountByNumber(accountNumber);
        if (account == null) {
            System.out.println("Account not found!");
            return;
        }
        account.displayAccountDetails();
    }
}
